<?xml version="1.0" encoding="UTF-8"?>
<project name="imptest2" default="cobolbuild" basedir="." xmlns:ac="antlib:net.sf.antcontrib">
	<typedef name="mffilelist" classname="com.microfocus.ant.TypeFileList"/>
	<typedef name="mfdirlist" classname="com.microfocus.ant.TypeDirectiveList"/>
	<typedef name="mfdestfilelist" classname="com.microfocus.ant.TypeDestinationFileList"/>
	<taskdef name="cobol" classname="com.microfocus.ant.TaskCobol"/>
	<taskdef name="cobolclean" classname="com.microfocus.ant.TaskCobolClean"/>
	<taskdef name="cobollink" classname="com.microfocus.ant.TaskCobolLink"/>
	<taskdef uri="antlib:net.sf.antcontrib" resource="net/sf/antcontrib/antlib.xml" classpath="lib/ant-contrib-1.0b3.jar"/>
	<!--  ***********************************  -->
	<!--  * General property initialisation *  -->
	<!--  ***********************************  -->
	<property environment="env"/>
	<property name="imptest2" value="${basedir}"/>
	<property name="cfg" value="New_Configuration"/>
	<property name="cfgtarget" value="cfg.${cfg}"/>
	<property name="forceCompile" value="true"/>
	<property name="pathVar.PROJECT_LOC" value="${env.PROJECT_LOC}"/>
	<property name="pathVar.WORKSPACE_LOC" value="${env.WORKSPACE_LOC}"/>
	<property name="pathVar.ECLIPSE_HOME" value="${env.ECLIPSE_HOME}"/>
	<property name="pathVar.PARENT_LOC" value="${env.PARENT_LOC}"/>
	<property name="failOnError" value="false"/>
	<property name="cobolFailOnError" value="true"/>
	<property name="cobollinkFailOnError" value="${failOnError}"/>
	<!--  ******************************  -->
	<!--  * OS-specific initialisation *  -->
	<!--  ******************************  -->
	<condition property="windows">
		<os family="windows"/>
	</condition>
	<condition property="unix">
		<os family="unix"/>
	</condition>
	<ac:if>
		<isset property="windows"/>
		<then>
			<property name="dllext" value=".dll"/>
			<property name="exeext" value=".exe"/>
			<property name="objext" value=".obj"/>
			<property name="equalsInDir" value="="/>
			<property name="pathVar.pS" value=";"/>
			<property name="shell" value="cmd"/>
			<property name="shell.ext" value=".bat"/>
			<property name="shell.arg" value="/c"/>
			<property name="script.header" value="@rem MS-DOS Batch File"/>
		</then>
	</ac:if>
	<ac:if>
		<isset property="unix"/>
		<then>
			<property name="dllext" value=".so"/>
			<property name="exeext" value=""/>
			<property name="objext" value=".o"/>
			<property name="equalsInDir" value="="/>
			<property name="pathVar.pS" value=":"/>
			<property name="shell" value="sh"/>
			<property name="shell.ext" value=".sh"/>
			<property name="shell.arg" value="-c"/>
			<property name="script.header" value="#!/bin/sh"/>
		</then>
	</ac:if>
	<!--  *****************************  -->
	<!--  * COBOL compiler directives *  -->
	<!--  *****************************  -->
	<!-- cobol_directive_set_1 -->
	<mfdirlist id="cobol_directive_set_1">
		<directive name="DIALECT" value="MF"/>
		<directive name="COPYEXT" value="cpy,cbl"/>
		<directive name="WARNING" value="1"/>
		<directive name="CHARSET" value="ASCII"/>
		<directive name="MAX-ERROR" value="100"/>
		<directive name="SOURCEFORMAT" value="fixed"/>
		<directive name="SOURCETABSTOP" value="4"/>
	</mfdirlist>
	<!--  **********************  -->
	<!--  * COBOL source files *  -->
	<!--  **********************  -->
	<!-- cobol_file_set_1 -->
	<mffilelist type="srcfile" id="cobol_file_set_1" srcdir="${basedir}">
		<file name="Program1.cbl"/>
	</mffilelist>
	<!-- COBOL copybook locations -->
	<mffilelist id="cobol.copybook.locations">
		<path type="copybook" name="${imptest2}"/>
	</mffilelist>
	<!--  ********************************  -->
	<!--  * Source File Compile and Link *  -->
	<!--  ********************************  -->
	<!-- Configuration:New_Configuration -->
	<target name="FileCompile.New_Configuration.Program1.cbl">
		<cobol debug="true" analysisDataDir="${analysisDataDir}" analysisData="${analysisData}" srcfile="Program1.cbl" destdir="${basedir}/New_Configuration.bin" is64bit="false" failonerror="${cobolFailOnError}" srcdir="${basedir}" forceCompile="${forceCompile}" desttype="obj" threadedRts="true">
			<mffilelist refid="cobol.copybook.locations"/>
			<mfdirlist refid="cobol_directive_set_1"/>
		</cobol>
	</target>
	<!--  ****************  -->
	<!--  * Object files *  -->
	<!--  ****************  -->
	<!-- Default -->
	<mffilelist id="cobol.default.object.files" srcdir="${basedir}/New_Configuration.bin" type="objfile">
		<file name="Program1${objext}"/>
	</mffilelist>
	<!--  *************************  -->
	<!--  * Configuration targets *  -->
	<!--  *************************  -->
	<!-- cfg.New_Configuration -->
	<target name="cobolbuild.cfg.New_Configuration" depends="pre.build.cfg.New_Configuration,nature.specific.build.cfg.New_Configuration,post.build.cfg.New_Configuration"/>
	<target name="nature.specific.build.cfg.New_Configuration" depends="cobol.cfg.New_Configuration"/>
	<target name="cobol.cfg.New_Configuration" depends="cobol.compile.cfg.New_Configuration,cobol.link.cfg.New_Configuration"/>
	<target name="New_Configuration.FileCompile">
		<ac:for list="${filesList}" param="filename" keepgoing="true" trim="true">
			<sequential>
				<ac:if>
					<not>
						<isset property="isCancelled"/>
					</not>
					<then>
						<ac:antcallback target="FileCompile.New_Configuration.@{filename}" inheritAll="true" return="isCancelled">
						</ac:antcallback>
					</then>
				</ac:if>
			</sequential>
		</ac:for>
	</target>
	<target name="cobol.compile.cfg.New_Configuration">
		<cobol debug="true" analysisDataDir="${analysisDataDir}" analysisData="${analysisData}" destdir="${basedir}/New_Configuration.bin" is64bit="false" failonerror="${cobolFailOnError}" forceCompile="${forceCompile}" desttype="obj" threadedRts="true">
			<mffilelist refid="cobol.copybook.locations"/>
			<mfdirlist refid="cobol_directive_set_1"/>
			<mffilelist refid="cobol_file_set_1"/>
		</cobol>
	</target>
	<target name="cobol.link.cfg.New_Configuration">
		<cobollink debug="true" destfile="imptest2" entrypoint="" sharedRts="true" destdir="${basedir}/New_Configuration.bin" is64bit="false" failonerror="${cobollinkFailOnError}" desttype="exe" threadedRts="true">
			<mffilelist refid="cobol.default.object.files"/>
		</cobollink>
	</target>
	<target name="pre.build.cfg.New_Configuration">
	</target>
	<target name="post.build.cfg.New_Configuration">
	</target>
	<target name="clean.cfg.New_Configuration">
		<cobolclean debug="true" destdir="${basedir}/New_Configuration.bin" desttype="exe">
			<mffilelist refid="cobol_file_set_1"/>
		</cobolclean>
		<cobolclean destdir="${basedir}/New_Configuration.bin" desttype="exe">
			<mffilelist>
				<file name="imptest2"/>
			</mffilelist>
		</cobolclean>
	</target>
	<!--  *******************  -->
	<!--  * General targets *  -->
	<!--  *******************  -->
	<target name="clean">
		<antcall target="clean.${cfgtarget}" inheritAll="true"/>
	</target>
	<target name="compileSource">
		<antcall target="${cfg}.FileCompile" inheritAll="true"/>
	</target>
	<target name="compile" depends="compileSource">
	</target>
	<target name="cobolbuild">
		<antcall target="cobolbuild.${cfgtarget}" inheritAll="true"/>
	</target>
</project>
